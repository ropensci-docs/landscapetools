[{"path":"https://docs.ropensci.org/landscapetools/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs?","title":"CONTRIBUTING","text":"Submit issue Issues page","code":""},{"path":"https://docs.ropensci.org/landscapetools/CONTRIBUTING.html","id":"issues-and-pull-requests","dir":"","previous_headings":"","what":"Issues and Pull Requests","title":"CONTRIBUTING","text":"considering pull request, may want open issue first discuss maintainer(s).","code":""},{"path":"https://docs.ropensci.org/landscapetools/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"CONTRIBUTING","text":"Fork repo GitHub account Clone version account machine account, e.g,. git clone https://github.com/<yourgithubusername>/{repo}.git Make sure track progress upstream (.e., version {repo} {owner}/{repo}) git remote add upstream https://github.com/{owner}/{repo}.git. making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes (bonus points making changes new feature branch - see https://guides.github.com/introduction/flow/ contribute branching, making changes, submitting pull request) Push account Submit pull request home base (likely master branch, check make sure) {owner}/{repo}","code":""},{"path":"https://docs.ropensci.org/landscapetools/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/landscapetools/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/landscapetools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2018 Marco Sciaini  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. landscapetools Copyright (C) 2018 Marco Sciaini This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"visualize","dir":"Articles","previous_headings":"","what":"Visualize","title":"Short walkthrough and overview of landscapetools","text":"plethora R packages visualize spatial data, covering unique aspects ways (find short introduction ). NLMR, needed way visualize landscapes without much fuss also way visualize many way found sufficient.","code":""},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"general-raster-plotting","dir":"Articles","previous_headings":"Visualize","what":"General raster plotting","title":"Short walkthrough and overview of landscapetools","text":"","code":"# Plot continous landscapes show_landscape(gradient_landscape) # Plot continous landscapes  show_landscape(classified_landscape, discrete = TRUE) # RasterStack/RasterBrick show_landscape(raster::stack(gradient_landscape, random_landscape), discrete = TRUE) # Plot a list of raster (list names become facet text) show_landscape(list(\"Gradient landscape\" = gradient_landscape,                     \"Random landscape\" = random_landscape)) # Plot multiple raster with unique scales show_landscape(raster::stack(gradient_landscape, random_landscape, classified_landscape), unique_scales = TRUE)"},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"binarize","dir":"Articles","previous_headings":"Scaling","what":"Binarize","title":"Short walkthrough and overview of landscapetools","text":"landscape ecology, many people work landscapes reflect matrix / habitat context. work simulated landscapes, util_binarize convienent wrapper achieve . can define value range landscape values get binary reflection :","code":"# Binarize the landscape into habitat and matrix binarized_raster <- util_binarize(fractal_landscape, breaks = 0.31415) show_landscape(binarized_raster, discrete = TRUE) # You can also provide a vector with thresholds and get a RasterStack with multiple binarized maps binarized_raster <- util_binarize(fractal_landscape, breaks = c(0.25, 0.5, 0.7)) show_landscape(binarized_raster) #> Warning: Removed 897 rows containing missing values or values outside the scale range #> (`geom_raster()`)."},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"classify","dir":"Articles","previous_headings":"Scaling","what":"Classify","title":"Short walkthrough and overview of landscapetools","text":"Complementary util_binarize, util_classify classifies landscape continuous values n discrete classes. function quite workhorse, provide extra detail explain everything:","code":"# Mode 1: Classify landscape into 3 classes based on the Fisher-Jenks algorithm: mode_1 <- util_classify(fractal_landscape, n = 3)  # Mode 2: Classify landscapes into landscape with exact proportions: mode_2 <- util_classify(fractal_landscape, weighting = c(0.5, 0.25, 0.25))  # Mode 3: Classify landscapes based on a real dataset (which we first create here) #         and the distribution of values in this real dataset mode_3 <- util_classify(gradient_landscape, n = 3)  ## Mode 3a: ... now we just have to provide the \"real landscape\" (mode_3) mode_3a <- util_classify(fractal_landscape, real_land = mode_3)  ## Mode 3b: ... and we can also say that certain values are not important for our classification: mode_3b <- util_classify(fractal_landscape, real_land = mode_3, mask_val = 1)  landscapes <- list( 'Mode 1'  = mode_1, 'Mode 2'  = mode_2, 'Mode 3'  = mode_3, 'Mode 3a' = mode_3a, 'Mode 3b' = mode_3b )  show_landscape(landscapes, unique_scales = TRUE, nrow = 1) #> Warning: Removed 1495 rows containing missing values or values outside the scale range #> (`geom_raster()`). # ... you can also name the classes: classified_raster <- util_classify(fractal_landscape,                                    n = 3,                                    level_names = c(\"Land Use 1\",                                                    \"Land Use 2\",                                                    \"Land Use 3\")) show_landscape(classified_raster, discrete = TRUE)"},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"rescale","dir":"Articles","previous_headings":"Scaling","what":"Rescale","title":"Short walkthrough and overview of landscapetools","text":"util_rescale linearly rescales element values raster range 0 1.","code":"library(raster)  landscape <- raster(matrix(1:100, 10, 10)) summary(landscape) #>          layer #> Min.      1.00 #> 1st Qu.  25.75 #> Median   50.50 #> 3rd Qu.  75.25 #> Max.    100.00 #> NA's      0.00  scaled_landscape <- util_rescale(landscape) summary(scaled_landscape) #>         layer #> Min.     0.00 #> 1st Qu.  0.25 #> Median   0.50 #> 3rd Qu.  0.75 #> Max.     1.00 #> NA's     0.00"},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"merge","dir":"Articles","previous_headings":"Scaling","what":"Merge","title":"Short walkthrough and overview of landscapetools","text":"util_merge likely makes sense context NLMR. merge multiple neutral landscapes models, can create feasible landscape patterns certain questions, come ecotones merge fractal patterns gradients.","code":"# Merge all maps into one merg <- util_merge(fractal_landscape, c(gradient_landscape, random_landscape), scalingfactor = 1)  # Plot an overview merge_vis <- list(     \"1) Primary\" = fractal_landscape,     \"2) Secondary 1\" = gradient_landscape,     \"3) Secondary 2\" = random_landscape,     \"4) Result\" = merg ) show_landscape(merge_vis) #> Warning: Removed 1196 rows containing missing values or values outside the scale range #> (`geom_raster()`)."},{"path":"https://docs.ropensci.org/landscapetools/articles/overview.html","id":"export","dir":"Articles","previous_headings":"","what":"Export","title":"Short walkthrough and overview of landscapetools","text":"proprietary software requires .asc files line breaks ESRI ArcMap produces. didn’t find correct parser R, wrote :","code":"util_rescale(fractal_landscape, \"fractal.asc\")"},{"path":"https://docs.ropensci.org/landscapetools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marco Sciaini. Author, maintainer. Matthias Fritsch. Author. Maximilian H.K. Hesselbarth. Author. Jakub Nowosad. Author. Laura Graham. Reviewer.            Laura reviewed package rOpenSci, see                    https://github.com/ropensci/onboarding/issues/188 Jeffrey Hollister. Reviewer.            Jeffrey reviewed package rOpenSci, see                    https://github.com/ropensci/onboarding/issues/188","code":""},{"path":"https://docs.ropensci.org/landscapetools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sciaini M, Fritsch M, Scherer C, Simpkins CE. NLMR landscapetools: integrated environment simulating modifying neutral landscape models R. Methods Ecol Evol. 2018;9:2240–2248.","code":"@Article{,   title = {NLMR and landscapetools: An integrated environment for simulating and modifying neutral landscape models in R},   author = {Marco Sciaini and Matthias Fritsch and Cedric Scherer and Craig E. Simpkins},   journal = {Methods in Ecololgy and Evolution},   volume = {00},   pages = {1--9},   year = {2018},   url = {https://doi.org/10.1111/2041-210X.13076}, }"},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"landscapetools","dir":"","previous_headings":"","what":"Landscape Utility Toolbox","title":"Landscape Utility Toolbox","text":"landscapetools provides utility functions less-glamorous tasks involved landscape analysis:","code":""},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"utilities","dir":"","previous_headings":"","what":"Utilities:","title":"Landscape Utility Toolbox","text":"util_binarize: Binarize continuous raster values, > 1 breaks given, return RasterBrick. util_classify: Classify raster proportions based upon vector class weightings. util_merge: Merge primary raster rasters weighted scaling factors. util_raster2tibble, util_tibble2raster: Coerce raster* objects tibbles vice versa. util_rescale: Linearly rescale element values raster range 0 1. util_writeESRI: Export raster objects ESRI asciis (Windows linebreaks).","code":""},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"visualization","dir":"","previous_headings":"","what":"Visualization","title":"Landscape Utility Toolbox","text":"show_landscape: Plot Raster* object landscapetools default theme (ggplot) multiple raster (RasterStack, -brick list raster) side side facets. show_shareplot: Plot landscape share subsequential buffers around /multiple point(s) interest","code":""},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"themes","dir":"","previous_headings":"","what":"Themes:","title":"Landscape Utility Toolbox","text":"theme_nlm, theme_nlm_grey: Opinionated ggplot2 theme visualize raster (continuous data). theme_nlm_discrete, theme_nlm_grey_discrete: Opinionated ggplot2 theme visualize raster (discrete data). theme_faceplot: Opinionated ggplot2 theme visualize raster facet wrap.","code":""},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Landscape Utility Toolbox","text":"can install released version CRAN : can install development version GitHub :","code":"install.packages(\"landscapetools\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/landscapetools\")"},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"classify","dir":"","previous_headings":"Utilities","what":"Classify","title":"Landscape Utility Toolbox","text":"","code":"# Classify the landscape into land uses classified_landscape <- util_classify(fractal_landscape,                                       n = 3,                                       level_names = c(\"Land Use 1\",                                                        \"Land Use 2\",                                                       \"Land Use 3\"))  show_landscape(classified_landscape, discrete = TRUE)"},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"merge","dir":"","previous_headings":"Utilities","what":"Merge","title":"Landscape Utility Toolbox","text":"","code":"# Merge all landscapes into one merged_landscape <- util_merge(fractal_landscape,                                c(gradient_landscape, random_landscape),                                scalingfactor = 1)  # Plot an overview merge_vis <- list(     \"1) Primary\" = fractal_landscape,     \"2) Secondary 1\" = gradient_landscape,     \"3) Secondary 2\" = random_landscape,     \"4) Result\" = merged_landscape )  show_landscape(merge_vis) #> Warning: Removed 1196 rows containing missing values (geom_raster)."},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"see-also","dir":"","previous_headings":"","what":"See also","title":"Landscape Utility Toolbox","text":"examples make heavy use NLMR package. packages developed together split pure landscape functionality utility tools. interested generating neutral landscapes via multitude available algorithms take closer look NLMR package.","code":""},{"path":"https://docs.ropensci.org/landscapetools/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Landscape Utility Toolbox","text":"Please report issues bugs. License: GPL3 Get citation information landscapetools R citation(package = 'landscapetools') Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/classified_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Example map (factor). — classified_landscape","title":"Example map (factor). — classified_landscape","text":"example map show landscapetools functionality generated nlm_random() algorithm factorial values.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/classified_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example map (factor). — classified_landscape","text":"","code":"classified_landscape"},{"path":"https://docs.ropensci.org/landscapetools/reference/classified_landscape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example map (factor). — classified_landscape","text":"raster layer object.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/classified_landscape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example map (factor). — classified_landscape","text":"Simulated neutral landscape models R. https://github.com/ropensci/NLMR/","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/fractal_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Example map (fractional brownian motion). — fractal_landscape","title":"Example map (fractional brownian motion). — fractal_landscape","text":"example map show landscapetools functionality generated nlm_fbm() algorithm.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/fractal_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example map (fractional brownian motion). — fractal_landscape","text":"","code":"fractal_landscape"},{"path":"https://docs.ropensci.org/landscapetools/reference/fractal_landscape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example map (fractional brownian motion). — fractal_landscape","text":"raster layer object.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/fractal_landscape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example map (fractional brownian motion). — fractal_landscape","text":"Simulated neutral landscape models R. https://github.com/ropensci/NLMR/","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/gradient_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Example map (planar gradient). — gradient_landscape","title":"Example map (planar gradient). — gradient_landscape","text":"example map show landscapetools functionality generated nlm_planargradient() algorithm.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/gradient_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example map (planar gradient). — gradient_landscape","text":"","code":"gradient_landscape"},{"path":"https://docs.ropensci.org/landscapetools/reference/gradient_landscape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example map (planar gradient). — gradient_landscape","text":"raster layer object.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/gradient_landscape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example map (planar gradient). — gradient_landscape","text":"Simulated neutral landscape models R. https://github.com/ropensci/NLMR/","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/landscapetools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"landscapetools — landscapetools-package","title":"landscapetools — landscapetools-package","text":"landscapetools provides utility functions work landscape data (raster* Objects).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/landscapetools/reference/landscapetools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"landscapetools — landscapetools-package","text":"Maintainer: Marco Sciaini sciaini.marco@gmail.com (ORCID) Authors: Matthias Fritsch matthias.fritsch@forst.uni-goettingen.de Maximilian H.K. Hesselbarth mhk.hesselbarth@gmail.com (ORCID) Jakub Nowosad nowosad.jakub@gmail.com (ORCID) contributors: Laura Graham (Laura reviewed package rOpenSci, see https://github.com/ropensci/onboarding/issues/188) [reviewer] Jeffrey Hollister (Jeffrey reviewed package rOpenSci, see https://github.com/ropensci/onboarding/issues/188) [reviewer]","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/random_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Example map (random). — random_landscape","title":"Example map (random). — random_landscape","text":"example map show landscapetools functionality generated nlm_random() algorithm.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/random_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example map (random). — random_landscape","text":"","code":"random_landscape"},{"path":"https://docs.ropensci.org/landscapetools/reference/random_landscape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example map (random). — random_landscape","text":"raster layer object.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/random_landscape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example map (random). — random_landscape","text":"Simulated neutral landscape models R. https://github.com/ropensci/NLMR/","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"show_landscape — show_landscape","title":"show_landscape — show_landscape","text":"Plot Raster* object NLMR default theme (ggplot).","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show_landscape — show_landscape","text":"","code":"show_landscape(x, xlab, ylab, discrete, unique_scales, n_col, n_row, ...)  # S3 method for RasterLayer show_landscape(x, xlab = \"Easting\", ylab = \"Northing\", discrete = FALSE, ...)  # S3 method for list show_landscape(   x,   xlab = \"Easting\",   ylab = \"Northing\",   discrete = FALSE,   unique_scales = FALSE,   n_col = NULL,   n_row = NULL,   ... )  # S3 method for RasterStack show_landscape(   x,   xlab = \"Easting\",   ylab = \"Northing\",   discrete = FALSE,   unique_scales = FALSE,   n_col = NULL,   n_row = NULL,   ... )  # S3 method for RasterBrick show_landscape(   x,   xlab = \"Easting\",   ylab = \"Northing\",   discrete = FALSE,   unique_scales = FALSE,   n_col = NULL,   n_row = NULL,   ... )"},{"path":"https://docs.ropensci.org/landscapetools/reference/show_landscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show_landscape — show_landscape","text":"x Raster* object xlab x axis label, default \"Easting\" ylab y axis label, default \"Northing\" discrete TRUE, function plots raster discrete legend. unique_scales TRUE multiple raster visualized, facet can unique color scale fill n_col multiple rasters visualized, n_col controls number columns facet n_row multiple rasters visualized, n_row controls number rows facet ... Arguments  theme_nlm","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_landscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show_landscape — show_landscape","text":"ggplot2 Object","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_landscape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"show_landscape — show_landscape","text":"","code":"if (FALSE) { x <- gradient_landscape  # classify y <- util_classify(gradient_landscape,                    n = 3,                    level_names = c(\"Land Use 1\", \"Land Use 2\", \"Land Use 3\"))  show_landscape(x) show_landscape(y, discrete = TRUE)  show_landscape(list(gradient_landscape, random_landscape)) show_landscape(raster::stack(gradient_landscape, random_landscape))  show_landscape(list(gradient_landscape, y), unique_scales = TRUE)  }"},{"path":"https://docs.ropensci.org/landscapetools/reference/show_shareplot.html","id":null,"dir":"Reference","previous_headings":"","what":"show_shareplot — show_shareplot","title":"show_shareplot — show_shareplot","text":"Plot landscape share subsequential buffers around /multiple point(s) interest","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_shareplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show_shareplot — show_shareplot","text":"","code":"show_shareplot(   landscape,   points,   buffer_width,   max_width = NULL,   multibuffer_df = NULL,   return_df = FALSE )  show_shareplot(   landscape,   points,   buffer_width,   max_width = NULL,   multibuffer_df = NULL,   return_df = FALSE )"},{"path":"https://docs.ropensci.org/landscapetools/reference/show_shareplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show_shareplot — show_shareplot","text":"landscape Raster* object points Point(s) represented two-column matrix data.frame; SpatialPoints*; SpatialPolygons*; SpatialLines; Extent; numeric vector representing cell numbers; sf* POINT object buffer_width Buffer widths landscape share measured. default, vector buffer sizes, max_width = NULL. value provided max_width, series buffer sizes created, buffer_width max_width, increases buffer_width. max_width Max distance buffer_width summed ; x axis plot multibuffer_df data.frame landscape share function already extracted, util_extract_multibuffer() function. given, arguments (landscape, points, buffer_width, max_width) ignored. Default NULL. return_df Logical value indicating tibble underlying data returned","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_shareplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"show_shareplot — show_shareplot","text":"ggplot2 Object","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/show_shareplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"show_shareplot — show_shareplot","text":"","code":"# create single point new_point = matrix(c(75,75), ncol = 2)  # show landscape and point of interest show_landscape(classified_landscape, discrete = TRUE) + ggplot2::geom_point(data = data.frame(x = new_point[,1], y = new_point[,2]),                     ggplot2::aes(x = x, y = y),                     col = \"grey\", size = 3)   # show single point share show_shareplot(classified_landscape, new_point, 10, 50)   # show multiple points share new_points = matrix(c(75, 110, 75, 30), ncol = 2) show_shareplot(classified_landscape, new_points, 10, 50)   # irregular buffer widths new_points = matrix(c(75, 110, 75, 30), ncol = 2) show_shareplot(classified_landscape, new_points, c(10, 30, 50))   # get data frame with results back result <- show_shareplot(classified_landscape, new_points, 10, 50, return_df = TRUE) result$share_df #> # A tibble: 30 × 4 #>    id          layer  freq buffer #>    <chr>       <fct> <int>  <dbl> #>  1 Point ID: 1 1        80     10 #>  2 Point ID: 2 1        38     10 #>  3 Point ID: 1 2       236     10 #>  4 Point ID: 2 2       266     10 #>  5 Point ID: 1 3         0     10 #>  6 Point ID: 2 3        12     10 #>  7 Point ID: 1 1       292     20 #>  8 Point ID: 2 1       184     20 #>  9 Point ID: 1 2       964     20 #> 10 Point ID: 2 2      1006     20 #> # ℹ 20 more rows  # use the output from util_extract_multibuffer new_points = matrix(c(75, 110, 75, 30), ncol = 2) df = util_extract_multibuffer(classified_landscape, new_points, 10, 50) show_shareplot(multibuffer_df = df)"},{"path":"https://docs.ropensci.org/landscapetools/reference/theme_nlm.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_nlm — theme_nlm","title":"theme_nlm — theme_nlm","text":"Opinionated ggplot2 theme visualize NLM raster.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/theme_nlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_nlm — theme_nlm","text":"","code":"theme_nlm(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip_text_family = base_family,   strip_text_size = 12,   strip_text_face = \"plain\",   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   axis_text_size = base_size,   axis_title_family = base_family,   axis_title_size = 9,   axis_title_face = \"plain\",   axis_title_just = \"rt\",   plot_margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\"),   grid_col = \"#cccccc\",   grid = TRUE,   axis_col = \"#cccccc\",   axis = FALSE,   ticks = FALSE,   legend_title = \"Z\",   legend_labels = NULL,   legend_text_size = 8,   legend_title_size = 10,   ratio = 1,   viridis_scale = \"D\",   ... )  theme_nlm_discrete(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip_text_family = base_family,   strip_text_size = 12,   strip_text_face = \"plain\",   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   axis_text_size = base_size,   axis_title_family = base_family,   axis_title_size = 9,   axis_title_face = \"plain\",   axis_title_just = \"rt\",   plot_margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\"),   grid_col = \"#cccccc\",   grid = TRUE,   axis_col = \"#cccccc\",   axis = FALSE,   ticks = FALSE,   legend_title = \"Z\",   legend_labels = NULL,   legend_text_size = 8,   legend_title_size = 10,   ratio = 1,   viridis_scale = \"D\",   ... )  theme_nlm_grey(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip_text_family = base_family,   strip_text_size = 12,   strip_text_face = \"plain\",   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   axis_text_size = base_size,   axis_title_family = base_family,   axis_title_size = 9,   axis_title_face = \"plain\",   axis_title_just = \"rt\",   plot_margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\"),   grid_col = \"#cccccc\",   grid = TRUE,   axis_col = \"#cccccc\",   axis = FALSE,   ticks = FALSE,   legend_title = \"Z\",   legend_labels = NULL,   legend_text_size = 8,   legend_title_size = 10,   ratio = 1,   ... )  theme_nlm_grey_discrete(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip_text_family = base_family,   strip_text_size = 12,   strip_text_face = \"plain\",   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   axis_text_size = base_size,   axis_title_family = base_family,   axis_title_size = 9,   axis_title_face = \"plain\",   axis_title_just = \"rt\",   plot_margin = ggplot2::unit(c(0, 0, 0, 0), \"lines\"),   grid_col = \"#cccccc\",   grid = TRUE,   axis_col = \"#cccccc\",   axis = FALSE,   ticks = FALSE,   legend_title = \"Z\",   legend_labels = NULL,   legend_text_size = 8,   legend_title_size = 10,   ratio = 1,   ... )  theme_facetplot(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   ratio = 1,   viridis_scale = \"D\",   ... )  theme_facetplot_discrete(   base_family = NA,   base_size = 11.5,   plot_title_family = base_family,   plot_title_size = 18,   plot_title_face = \"bold\",   plot_title_margin = 10,   subtitle_family = NA,   subtitle_size = 13,   subtitle_face = \"plain\",   subtitle_margin = 15,   strip.background = \"grey80\",   caption_family = NA,   caption_size = 9,   caption_face = \"plain\",   caption_margin = 10,   ratio = 1,   viridis_scale = \"D\",   ... )"},{"path":"https://docs.ropensci.org/landscapetools/reference/theme_nlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_nlm — theme_nlm","text":"base_family base font family size base_size base font size plot_title_family plot title family plot_title_size plot title size plot_title_face plot title face plot_title_margin plot title ggplot2::margin subtitle_family plot subtitle family subtitle_size plot subtitle size subtitle_face plot subtitle face subtitle_margin plot subtitle ggplot2::margin bottom (single numeric value) strip_text_family facet facet label font family strip_text_size facet label font family, face size strip_text_face facet facet label font face strip.background strip background caption_family plot caption family caption_size plot caption size caption_face plot caption face caption_margin plot caption ggplot2::margin axis_text_size axis text size axis_title_family axis title family axis_title_size axis title size axis_title_face axis title face axis_title_just axis title justification plot_margin plot ggplot2::margin (specify `ggplot2::margin``) grid_col grid color grid grid TRUE/FALSE axis_col axis color axis axis TRUE/FALSE ticks ticks TRUE/FALSE legend_title Title legend (default \"Z\") legend_labels Labels legend ticks, used show_landscape automatically derived. legend_text_size legend text size, default 8 legend_title_size legend text size, default 10 ratio ratio tiles (default 1, raster square ratio raster::nrow(x) / raster::ncol(x)) viridis_scale Five options available: \"viridis - magma\" (= \"\"), \"viridis - inferno\" (= \"B\"), \"viridis - plasma\" (= \"C\"), \"viridis - viridis\" (= \"D\",  default option), \"viridis - cividis\" (= \"E\") ... optional arguments ggplot2::theme","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/theme_nlm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"theme_nlm — theme_nlm","text":"focused theme visualize raster data sets lot defaults ggplot2::theme. functions setup way can customize one just wrapping call changing parameters. theme heavily influenced hrbrmstr package hrbrthemes (https://github.com/hrbrmstr/hrbrthemes/).","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"util_as_integer — util_as_integer","title":"util_as_integer — util_as_integer","text":"Coerces raster values integers","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_as_integer — util_as_integer","text":"","code":"util_as_integer(x)  # S3 method for RasterLayer util_as_integer(x)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_as_integer — util_as_integer","text":"x raster","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_as_integer — util_as_integer","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"util_as_integer — util_as_integer","text":"Coerces raster values integers, sometimes needed want methods rely integer values.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_as_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_as_integer — util_as_integer","text":"","code":"# Mode 1 util_as_integer(fractal_landscape) #> class      : RasterLayer  #> dimensions : 150, 150, 22500  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 150, 0, 150  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      : layer  #> values     : 1, 22500  (min, max) #>"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Binarize continuous raster values — util_binarize","title":"Binarize continuous raster values — util_binarize","text":"Classify continuous raster values binary map cells based upon given break(s).","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binarize continuous raster values — util_binarize","text":"","code":"util_binarize(x, breaks)  # S3 method for RasterLayer util_binarize(x, breaks)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binarize continuous raster values — util_binarize","text":"x Raster* object breaks Vector one break percentages","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binarize continuous raster values — util_binarize","text":"RasterLayer / RasterBrick","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binarize continuous raster values — util_binarize","text":"Breaks considered habitat percentages (p). one percentage given multiple layers written brick.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_binarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binarize continuous raster values — util_binarize","text":"","code":"breaks <- c(0.3, 0.5) binary_maps <- util_binarize(gradient_landscape, breaks)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_calc_boundaries.html","id":null,"dir":"Reference","previous_headings":"","what":"util_calc_boundaries — util_calc_boundaries","title":"util_calc_boundaries — util_calc_boundaries","text":"Determine upper class boundaries classification vector values ranging 0-1 based upon vector cumulative proportions.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_calc_boundaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_calc_boundaries — util_calc_boundaries","text":"","code":"util_calc_boundaries(x, cumulative_proportions)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_calc_boundaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_calc_boundaries — util_calc_boundaries","text":"x vector data values. cumulative_proportions Vector class cumulative proportions, generated w2cp.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_calc_boundaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_calc_boundaries — util_calc_boundaries","text":"Numerical vector boundaries matrix classification","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_calc_boundaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_calc_boundaries — util_calc_boundaries","text":"","code":"x <- matrix(runif(100,0,1),10,10) y <- util_w2cp(c(0.5, 0.25, 0.25)) #cumulative proportion util_calc_boundaries(x,y) #> [1] 0.4663935 0.6885560 0.9970691"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":null,"dir":"Reference","previous_headings":"","what":"util_classify — util_classify","title":"util_classify — util_classify","text":"Classify continuous landscapes landscapes discrete classes","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_classify — util_classify","text":"","code":"util_classify(x, n, weighting, level_names, real_land, mask_val)  # S3 method for RasterLayer util_classify(   x,   n = NULL,   weighting = NULL,   level_names = NULL,   real_land = NULL,   mask_val = NULL )"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_classify — util_classify","text":"x raster n Number classes weighting Vector numeric values considered habitat percentages (see details) level_names Vector names factor levels. real_land Raster real landscape (see details) mask_val Value mask (refers real_land)","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_classify — util_classify","text":"RasterLayer","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"util_classify — util_classify","text":"Mode 1: Calculate optimum breakpoints using Jenks natural breaks optimization, number classes determined n. Jenks optimization seeks minimize variance within categories, maximizing variance categories. Mode 2: number elements weighting vector determines number classes resulting matrix. classes start value 1. non-numerical levels required, user can specify vector turn numerical factors data types, example character strings (.e. class labels). numerical vector weightings sum 1, sum weightings divided number elements weightings vector used classificat#'     . Mode 3: given 'real' landscape number classes weightings extracted used classify given landscape (given weighting parameter overwritten case!). optional mask value given corresponding class 'real' landscape cut landscape beforehand.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_classify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_classify — util_classify","text":"","code":"if (FALSE) { # Mode 1 util_classify(fractal_landscape,               n = 3,               level_names = c(\"Land Use 1\", \"Land Use 2\", \"Land Use 3\"))  # Mode 2 util_classify(fractal_landscape,               weighting = c(0.5, 0.25, 0.25),               level_names = c(\"Land Use 1\", \"Land Use 2\", \"Land Use 3\"))  # Mode 3 real_land <- util_classify(gradient_landscape,               n = 3,               level_names = c(\"Land Use 1\", \"Land Use 2\", \"Land Use 3\"))  fractal_landscape_real <- util_classify(fractal_landscape, real_land = real_land) fractal_landscape_mask <- util_classify(fractal_landscape, real_land = real_land, mask_val = 1)  landscapes <- list( '1 nlm' = fractal_landscape, '2 real' = real_land, '3 result' = fractal_landscape_real, '4 result with mask' = fractal_landscape_mask )  show_landscape(landscapes, unique_scales = TRUE, nrow = 1) }"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_extract_multibuffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raster values for multiple buffers — util_extract_multibuffer","title":"Extract raster values for multiple buffers — util_extract_multibuffer","text":"function creates series circular buffers around spatial points computes frequency value raster within buffers; results printed data.frame.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_extract_multibuffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raster values for multiple buffers — util_extract_multibuffer","text":"","code":"util_extract_multibuffer(   landscape,   points,   buffer_width,   max_width = NULL,   rel_freq = FALSE,   fun = NULL,   point_id_text = TRUE,   ... )"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_extract_multibuffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raster values for multiple buffers — util_extract_multibuffer","text":"landscape Raster* object points Point(s) represented two-column matrix data.frame; SpatialPoints*; SpatialPolygons*; SpatialLines; Extent; numeric vector representing cell numbers; sf* POINT object. buffer_width Buffer widths frequency landscape values measured. might either single value vector buffer sizes, max_width = NULL (default). value provided max_width, series buffer sizes created, buffer_width max_width, increases buffer_width. max_width Maximum distance buffer_width summed . NULL, buffer_width interpreted series buffer widths. rel_freq Logical. TRUE, relative frequency raster values also returned, besides absolute frequency. Ignored fun provided. fun Function apply raster values within buffer (e.g. \"median\", \"mean\"). point_id_text Logical. TRUE, string \"Point ID:\" added first column output. ... additional arguments (none implemented)","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_extract_multibuffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raster values for multiple buffers — util_extract_multibuffer","text":"tibble frequency raster value within buffers different sizes around point. Alternatively, tibble relative frequency raster values, rel_freq = TRUE, function raster values, fun provided.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_extract_multibuffer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raster values for multiple buffers — util_extract_multibuffer","text":"","code":"# create single point new_point = matrix(c(75,75), ncol = 2)  # show landscape and point of interest show_landscape(classified_landscape, discrete = TRUE) + ggplot2::geom_point(data = data.frame(x = new_point[,1], y = new_point[,2]),                     ggplot2::aes(x = x, y = y),                     col = \"grey\", size = 3)   # extract frequency of each pixel value within each buffer from 10 to 50 m width util_extract_multibuffer(classified_landscape, new_point, 10, 50) #> # A tibble: 14 × 4 #>    id          layer  freq buffer #>    <chr>       <fct> <int>  <dbl> #>  1 Point ID: 1 1        80     10 #>  2 Point ID: 1 2       236     10 #>  3 Point ID: 1 1       292     20 #>  4 Point ID: 1 2       964     20 #>  5 Point ID: 1 3         8     20 #>  6 Point ID: 1 1       484     30 #>  7 Point ID: 1 2      1898     30 #>  8 Point ID: 1 3       446     30 #>  9 Point ID: 1 1       825     40 #> 10 Point ID: 1 2      2810     40 #> 11 Point ID: 1 3      1389     40 #> 12 Point ID: 1 1      1362     50 #> 13 Point ID: 1 2      3750     50 #> 14 Point ID: 1 3      2748     50 # use irregular buffer sizes util_extract_multibuffer(classified_landscape, new_point, c(5, 10, 20, 30)) #> # A tibble: 10 × 4 #>    id          layer  freq buffer #>    <chr>       <fct> <int>  <dbl> #>  1 Point ID: 1 1        19      5 #>  2 Point ID: 1 2        61      5 #>  3 Point ID: 1 1        80     10 #>  4 Point ID: 1 2       236     10 #>  5 Point ID: 1 1       292     20 #>  6 Point ID: 1 2       964     20 #>  7 Point ID: 1 3         8     20 #>  8 Point ID: 1 1       484     30 #>  9 Point ID: 1 2      1898     30 #> 10 Point ID: 1 3       446     30 # also returns relative frequency util_extract_multibuffer(classified_landscape, new_point, 10, 50, rel_freq = TRUE) #> # A tibble: 14 × 5 #>    id          layer  freq rel_freq buffer #>    <chr>       <fct> <int>    <dbl>  <dbl> #>  1 Point ID: 1 1        80  0.253       10 #>  2 Point ID: 1 2       236  0.747       10 #>  3 Point ID: 1 1       292  0.231       20 #>  4 Point ID: 1 2       964  0.763       20 #>  5 Point ID: 1 3         8  0.00633     20 #>  6 Point ID: 1 1       484  0.171       30 #>  7 Point ID: 1 2      1898  0.671       30 #>  8 Point ID: 1 3       446  0.158       30 #>  9 Point ID: 1 1       825  0.164       40 #> 10 Point ID: 1 2      2810  0.559       40 #> 11 Point ID: 1 3      1389  0.276       40 #> 12 Point ID: 1 1      1362  0.173       50 #> 13 Point ID: 1 2      3750  0.477       50 #> 14 Point ID: 1 3      2748  0.350       50 # use a given function - e.g. median in each buffer width util_extract_multibuffer(classified_landscape, new_point, 10, 50, fun = \"median\") #> # A tibble: 5 × 4 #>   id          layer median buffer #>   <chr>       <fct>  <int>  <dbl> #> 1 Point ID: 1 2          1     10 #> 2 Point ID: 1 2          1     20 #> 3 Point ID: 1 2          1     30 #> 4 Point ID: 1 2          1     40 #> 5 Point ID: 1 2          1     50  # show multiple points share new_points = matrix(c(75, 110, 75, 30), ncol = 2) util_extract_multibuffer(classified_landscape, new_points, c(5, 10, 20, 30)) #> # A tibble: 24 × 4 #>    id          layer  freq buffer #>    <chr>       <fct> <int>  <dbl> #>  1 Point ID: 1 1        19      5 #>  2 Point ID: 2 1         7      5 #>  3 Point ID: 1 2        61      5 #>  4 Point ID: 2 2        68      5 #>  5 Point ID: 1 3         0      5 #>  6 Point ID: 2 3         5      5 #>  7 Point ID: 1 1        80     10 #>  8 Point ID: 2 1        38     10 #>  9 Point ID: 1 2       236     10 #> 10 Point ID: 2 2       266     10 #> # ℹ 14 more rows"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"util_merge — util_merge","title":"util_merge — util_merge","text":"Merge primary raster rasters weighted scaling factors.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_merge — util_merge","text":"","code":"util_merge(primary_nlm, secondary_nlm, scalingfactor = 1, rescale)  # S3 method for RasterLayer util_merge(primary_nlm, secondary_nlm, scalingfactor = 1, rescale = TRUE)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_merge — util_merge","text":"primary_nlm Primary Raster* object secondary_nlm list stack Raster* objects merged primary Raster* object scalingfactor Weight secondary Raster* objects rescale TRUE (default), values rescaled 0-1.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_merge — util_merge","text":"Rectangular matrix values ranging 0-1","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_merge — util_merge","text":"","code":"x <- util_merge(gradient_landscape, random_landscape) show_landscape(x)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts raster data into tibble — util_raster2tibble","title":"Converts raster data into tibble — util_raster2tibble","text":"Writes spatial raster values tibble adds coordinates.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts raster data into tibble — util_raster2tibble","text":"","code":"util_raster2tibble(x, format = \"long\")  util_raster2tibble(x, format = \"long\")"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts raster data into tibble — util_raster2tibble","text":"x Raster* object format Either \"long\" (default) \"wide\" output resulting tibble","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts raster data into tibble — util_raster2tibble","text":"tibble","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts raster data into tibble — util_raster2tibble","text":"loose resolution, extent reference system. output raw tiles.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_raster2tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts raster data into tibble — util_raster2tibble","text":"","code":"maptib <- util_raster2tibble(fractal_landscape) if (FALSE) { library(ggplot2) ggplot(maptib, aes(x,y)) +     coord_fixed() +     geom_raster(aes(fill = z)) }"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"util_rescale — util_rescale","title":"util_rescale — util_rescale","text":"Linearly rescale element values raster range 0 1.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_rescale — util_rescale","text":"","code":"util_rescale(x)  util_rescale(x)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_rescale — util_rescale","text":"x Raster* object","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_rescale — util_rescale","text":"Raster* object values ranging 0-1","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"util_rescale — util_rescale","text":"Rasters generated nlm_ functions scaled 0 1 default, option can set FALSE needed.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_rescale — util_rescale","text":"","code":"unscaled_landscape <- gradient_landscape + fractal_landscape util_rescale(unscaled_landscape) #> class      : RasterLayer  #> dimensions : 150, 150, 22500  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 150, 0, 150  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      : layer  #> values     : 0, 1  (min, max) #>"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts tibble data into a raster — util_tibble2raster","title":"Converts tibble data into a raster — util_tibble2raster","text":"Writes spatial tibble values raster.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts tibble data into a raster — util_tibble2raster","text":"","code":"util_tibble2raster(x)  util_tibble2raster(x)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts tibble data into a raster — util_tibble2raster","text":"x tibble","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts tibble data into a raster — util_tibble2raster","text":"Raster* object","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts tibble data into a raster — util_tibble2raster","text":"Writes tiles coordinates tibble raster. Resolution set 1 extent c(0, max(x), 0, max(y)). can directly convert back result 'util_raster2tibble()' without problems. altered coordinates otherwise played data, careful using function.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_tibble2raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts tibble data into a raster — util_tibble2raster","text":"","code":"maptib <- util_raster2tibble(random_landscape) mapras <- util_tibble2raster(maptib) all.equal(random_landscape, mapras) #> [1] \"Attributes: < Names: 2 string mismatches >\"                                      #> [2] \"Attributes: < Length mismatch: comparison on first 13 components >\"              #> [3] \"Attributes: < Component “data”: Names: 1 string mismatch >\"                      #> [4] \"Attributes: < Component 12: Lengths (0, 1) differ (string compare on first 0) >\" #> [5] \"Attributes: < Component 13: Modes: list, character >\""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_w2cp.html","id":null,"dir":"Reference","previous_headings":"","what":"util_w2cp — util_w2cp","title":"util_w2cp — util_w2cp","text":"Convert list category  weighting  1D array cumulative proportions.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_w2cp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_w2cp — util_w2cp","text":"","code":"util_w2cp(weighting)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_w2cp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_w2cp — util_w2cp","text":"weighting list numeric values","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_w2cp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"util_w2cp — util_w2cp","text":"Rectangular matrix values ranging 0-1","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_w2cp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_w2cp — util_w2cp","text":"","code":"util_w2cp(c(0.2, 0.4, 0.6, 0.9)) #> [1] 0.0952381 0.2857143 0.5714286 1.0000000"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_writeESRI.html","id":null,"dir":"Reference","previous_headings":"","what":"util_writeESRI — util_writeESRI","title":"util_writeESRI — util_writeESRI","text":"Export raster objects ESRI ascii files.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_writeESRI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"util_writeESRI — util_writeESRI","text":"","code":"util_writeESRI(x, filepath)  # S3 method for RasterLayer util_writeESRI(x, filepath)"},{"path":"https://docs.ropensci.org/landscapetools/reference/util_writeESRI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"util_writeESRI — util_writeESRI","text":"x Raster* object filepath path write raster file","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_writeESRI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"util_writeESRI — util_writeESRI","text":"raster::writeRaster SDMTools::write.asc export files recognised GIS software, nevertheless UNIX linebreaks. proprietary software (like SPIP example) require exact 1:1 replica output ESRI's ArcMap, Windows software carriage returns end line. util_writeESRI therefore used need , otherwise raster::writeRaster better fit exporting raster data R.","code":""},{"path":"https://docs.ropensci.org/landscapetools/reference/util_writeESRI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"util_writeESRI — util_writeESRI","text":"","code":"if (FALSE) { util_writeESRI(gradient_landscape, \"gradient_landscape.asc\") }"},{"path":"https://docs.ropensci.org/landscapetools/news/index.html","id":"landscapetools-062","dir":"Changelog","previous_headings":"","what":"landscapetools 0.6.2","title":"landscapetools 0.6.2","text":"Bugfix util_classify","code":""},{"path":"https://docs.ropensci.org/landscapetools/news/index.html","id":"landscapetools-060","dir":"Changelog","previous_headings":"","what":"landscapetools 0.6.0","title":"landscapetools 0.6.0","text":"util_raster2tibble can now return wide tibble New function show_shareplot util_as_integer now returns integer values 1:n instead rounding numeric values","code":""},{"path":"https://docs.ropensci.org/landscapetools/news/index.html","id":"landscapetools-050","dir":"Changelog","previous_headings":"","what":"landscapetools 0.5.0","title":"landscapetools 0.5.0","text":"CRAN release: 2019-02-25 now takes argument n specify number classes n argument implemented C++ Removed Roboto font util_import_roboto Removed util_plot_grey util_plot show_landscape new function util_writeESRI produces replica esris ascii file format","code":""},{"path":"https://docs.ropensci.org/landscapetools/news/index.html","id":"landscapetools-040","dir":"Changelog","previous_headings":"","what":"landscapetools 0.4.0","title":"landscapetools 0.4.0","text":"CRAN release: 2018-10-01 minor bug fixes util_facetplot now better handles lists raster improved theme_facetplot util_classify can now reclassify based real landscapes, classification overwrites weightings proportions landscape util_classify now mask argument, allows classification outside mask","code":""}]
